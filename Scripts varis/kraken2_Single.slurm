#!/bin/bash

#SBATCH --job-name=kraken_tests
#SBATCH --output=kraken_test.out
#SBATCH --error=kraken_test.err
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=12
#SBATCH -p nodo.q
#SBATCH -w clus01



mkdir -p /home/pfc/epineda/pruebaKraken/workdir/
WK_DIR=/home/pfc/epineda/pruebaKraken/workdir/
cd ${WK_DIR}


#Software Kraken path
KRAKEN2=/home/caos/bio-data/TOOLS/kraken2-2.0.8-beta/kraken2
# Kraken DataBase path
#KRAKEN_DB=/home/caos/bio-data/DATA/whole_genomes/kraken/DB_with_no-masking
#KRAKEN_DB=/home/caos/bio-data/Kraken_data/data_50G/kraken_db_with_no_masking_1
KRAKEN_DB=/home/caos/bio-data/Kraken_data/data_5G/kraken_db_with_no_masking_1

PYTHON_SCRIPT=/home/pfc/epineda/TFG_Esteve/kraken_scripts/extract_kraken_reads.py

#Para los taxid, vamos a crear un vector con los numeros de forma automatizada
declare -A FAMILIES
FAMILIES=()
/home/caos/bio-data/TOOLS/kraken2-2.0.8-beta/kraken2-inspect --db $KRAKEN_DB | awk '$4 ~ /F/ && length($4) == 1 {print}' > familiesTaxids.txt

while IFS= read -r fila
do
	family=$(echo $fila | awk '{print $6}')
        taxid=$(echo $fila | awk '{print $5}')
        FAMILIES+=([$family]=$taxid)
done < familiesTaxids.txt

for perc in 75 25; do
#for perc in 75; do
	export perc
	SAMPLE_PATH=/home/caos/bio-data/DATA/single_spp_lib/${perc}/SE_trim_len150_minlen140
	for lib in 0-PM 1-DV 2-DMe 3-DMo 4-BO 5-LH 6-AE 7-BT 8-AM 9-AP 10-ACo 11-BTa 12-CL 13-DMe 14-DMo 15-DV 16-DSu 17-LH 18-PXy 19-SI 20-VE 21-WA; do
	#for lib in 0-PM; do #NEW
		file2map=${SAMPLE_PATH}/${lib}-R1_trim-${perc}.fastq
		
		$KRAKEN2 --DB $KRAKEN_DB $file2map --output ${lib}-R1_trim-${perc}.kraken --report ${lib}-R1_trim-${perc}.report
		reportFile=${lib}-R1_trim-${perc}.report
		CLASSIFIED=${lib}-R1_trim-${perc}.kraken

		# Generamos arrays con declare y luego incorporamos a estos array los archivos mediante las path
		declare -a SEQ_FILE
		SEQ_FILE=()
		SEQ_FILE+=($(readlink -f $file2map))
		declare -a REPORT
		REPORT=()
		REPORT+=($(readlink -f $reportFile))

		python3.6 $PYTHON_SCRIPT -k $CLASSIFIED -s ${SEQ_FILE[0]} -o ${lib}-R1_trim-${perc}.fastq -t ${FAMILIES[@]} --include-children -r ${REPORT[0]} --fastq-output
	done
done
